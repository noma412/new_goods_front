{"version":3,"sources":["components/Lists.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Lists","props","useState","setLAWSON","setFamilyMart","lists","setLists","allPage","setAllPage","page","setPage","console","log","process","useEffect","name","pageEvent","num","update","window","scrollTo","top","fetch","method","then","res","json","Math","ceil","data","Fragment","count","color","onChange","e","className","map","list","href","target","rel","src","img","alt","loading","title","kcal","price","date","substr","replaceAll","id","App","setName","itemShow","storeName","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAmHeA,EA5FD,SAACC,GACb,MAA4BC,qBAA5B,mBAAeC,GAAf,WACA,EAAoCD,qBAApC,mBAAmBE,GAAnB,WACA,EAA0BF,qBAA1B,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBN,mBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACAC,QAAQC,IAAIC,cAMZC,qBAAU,WACHb,EAAMc,MACXC,EAAU,KACT,CAACf,EAAMc,OACV,IAAMC,EAAY,SAACC,GACjBP,EAAQO,GACRC,EAAOD,IAEHC,EAAS,SAACD,GACdE,OAAOC,SAAS,CACdC,IAAK,IAEPC,MAAM,GAAD,OAbD,+DAaC,iDAEDrB,EAAMc,KAFL,mBAGoB,IAAXE,EAAM,IAClB,CACEM,OAAQ,QAGTC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACC,GAGL,OAFAjB,EAAWmB,KAAKC,KAAKH,EAAIR,IAAM,KAC/BX,EAASmB,EAAII,MACL5B,EAAMc,MACZ,IAAK,SACHZ,EAAUsB,EAAII,MACd,MACF,IAAK,aACHzB,EAAcqB,EAAII,WAK5B,OACE,eAAC,IAAMC,SAAP,WACGzB,GACC,cAAC,IAAD,CACE0B,MAAOxB,EACPyB,MAAM,UACNC,SAAU,SAACC,EAAGzB,GAAJ,OAAaO,EAAUP,IACjCA,KAAMA,EACN0B,UAAU,kBAGd,oBAAIA,UAAU,YAAd,SACG9B,GACCA,EAAM+B,KAAI,SAACC,GAAD,OACR,oBAAkBF,UAAWE,EAAKtB,KAAlC,SACE,oBAAGuB,KAAMD,EAAKC,KAAMC,OAAO,SAASC,IAAI,aAAxC,UACE,qBAAKL,UAAU,MAAf,SACE,qBAAKM,IAAKJ,EAAKK,IAAKC,IAAI,GAAGC,QAAQ,WAErC,mBAAGT,UAAU,OAAb,SAAqBE,EAAKtB,OAC1B,mBAAGoB,UAAU,MAAb,SAAoBE,EAAKQ,QACzB,mBAAGV,UAAU,OAAb,SAAqBE,EAAKS,OAC1B,mBAAGX,UAAU,QAAb,SAAsBE,EAAKU,QAC3B,oBAAGZ,UAAU,OAAb,UACE,sDACA,+BAAOE,EAAKW,KAAKC,OAAO,EAAG,IAAIC,WAAW,IAAK,cAX5Cb,EAAKc,SAiBnB9C,GACC,cAAC,IAAD,CACE0B,MAAOxB,EACPyB,MAAM,UACNC,SAAU,SAACC,EAAGzB,GAAJ,OAAaO,EAAUP,IACjCA,KAAMA,EACN0B,UAAU,yB,MC/ELiB,MAzBf,WACE,MAAwBlD,mBAAiB,IAAzC,mBAAOa,EAAP,KAAasC,EAAb,KACMC,EAAW,SAACC,GACZxC,IAASwC,GACbF,EAAQE,IAEV,OACE,sBAAKpB,UAAU,MAAf,UACE,oDACA,0BAASA,UAAU,WAAnB,UAIE,wBAAQqB,QAAS,kBAAMF,EAAS,WAAWnB,UAAU,SAArD,sCAGA,wBAAQqB,QAAS,kBAAMF,EAAS,eAAenB,UAAU,aAAzD,iEAIF,cAAC,EAAD,CAAOpB,KAAMA,QCVJ0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.24d990fc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MuiPagination from '@material-ui/lab/Pagination'\r\nimport '../assets/scss/Lists.scss'\r\ntype typeProps = {\r\n  name: string\r\n}\r\ntype data = {\r\n  id: number\r\n  name: string\r\n  title: string\r\n  img: string\r\n  href: string\r\n  price: string\r\n  date: string\r\n  kcal: string\r\n  caution: string\r\n  release_date: string\r\n}\r\ntype response = {\r\n  num: number\r\n  data: data[]\r\n}\r\n\r\nconst Lists = (props: typeProps) => {\r\n  const [LAWSON, setLAWSON] = useState<data[]>()\r\n  const [FamilyMart, setFamilyMart] = useState<data[]>()\r\n  const [lists, setLists] = useState<data[]>()\r\n  const [allPage, setAllPage] = useState(1)\r\n  const [page, setPage] = useState(1)\r\n  console.log(process.env.NODE_ENV)\r\n  const domain: string =\r\n    //@ts-ignore\r\n    process.env.NODE_ENV === 'local'\r\n      ? 'http://localhost:3000'\r\n      : 'https://3ld1dn462c.execute-api.ap-northeast-1.amazonaws.com/'\r\n  useEffect((): void => {\r\n    if (!props.name) return\r\n    pageEvent(1)\r\n  }, [props.name])\r\n  const pageEvent = (num: number): void => {\r\n    setPage(num)\r\n    update(num)\r\n  }\r\n  const update = (num: number): void => {\r\n    window.scrollTo({\r\n      top: 0,\r\n    })\r\n    fetch(\r\n      `${domain}/default/new-goods-get-prod-func?name=${\r\n        props.name\r\n      }&offset=${(num - 1) * 50}`,\r\n      {\r\n        method: 'GET',\r\n      }\r\n    )\r\n      .then((res) => {\r\n        return res.json()\r\n      })\r\n      .then((res: response) => {\r\n        setAllPage(Math.ceil(res.num / 50))\r\n        setLists(res.data)\r\n        switch (props.name) {\r\n          case 'LAWSON':\r\n            setLAWSON(res.data)\r\n            break\r\n          case 'FamilyMart':\r\n            setFamilyMart(res.data)\r\n            break\r\n        }\r\n      })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {lists && (\r\n        <MuiPagination\r\n          count={allPage}\r\n          color=\"primary\"\r\n          onChange={(e, page) => pageEvent(page)}\r\n          page={page}\r\n          className=\"topPagenation\"\r\n        />\r\n      )}\r\n      <ul className=\"food-list\">\r\n        {lists &&\r\n          lists.map((list: data) => (\r\n            <li key={list.id} className={list.name}>\r\n              <a href={list.href} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"img\">\r\n                  <img src={list.img} alt=\"\" loading=\"lazy\" />\r\n                </div>\r\n                <p className=\"name\">{list.name}</p>\r\n                <p className=\"ttl\">{list.title}</p>\r\n                <p className=\"kcal\">{list.kcal}</p>\r\n                <p className=\"price\">{list.price}</p>\r\n                <p className=\"date\">\r\n                  <span>更新日</span>\r\n                  <span>{list.date.substr(0, 10).replaceAll('-', '/')}</span>\r\n                </p>\r\n              </a>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      {lists && (\r\n        <MuiPagination\r\n          count={allPage}\r\n          color=\"primary\"\r\n          onChange={(e, page) => pageEvent(page)}\r\n          page={page}\r\n          className=\"bottomPagenation\"\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Lists\r\n","import React, { useState } from 'react'\r\nimport Lists from './components/Lists'\r\nimport './assets/scss/App.scss'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState<string>('')\r\n  const itemShow = (storeName: string) => {\r\n    if (name === storeName) return\r\n    setName(storeName)\r\n  }\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>新商品</h1>\r\n      <section className=\"btn-area\">\r\n        {/* <button onClick={() => itemShow('7-Eleven')} className=\"7-Eleven\">\r\n          セブンイレブン\r\n        </button> */}\r\n        <button onClick={() => itemShow('LAWSON')} className=\"lawson\">\r\n          ローソン\r\n        </button>\r\n        <button onClick={() => itemShow('FamilyMart')} className=\"familymart\">\r\n          ファミリーマート\r\n        </button>\r\n      </section>\r\n      <Lists name={name} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/css/reset.css'\r\nimport './assets/scss/index.scss'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}