{"version":3,"sources":["components/Lists.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Lists","props","useState","lists","setLists","allPage","setAllPage","page","setPage","console","log","process","useEffect","name","pageEvent","num","update","window","scrollTo","top","fetch","method","then","res","json","Math","ceil","data","Fragment","count","color","onChange","e","className","map","list","href","target","rel","src","img","alt","loading","title","kcal","price","date","substr","replaceAll","id","App","setName","itemShow","storeName","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA0GeA,EAnFD,SAACC,GACb,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACAC,QAAQC,IAAIC,cAMZC,qBAAU,WACHX,EAAMY,MACXC,EAAU,KAET,CAACb,EAAMY,OACV,IAAMC,EAAY,SAACC,GACjBP,EAAQO,GACRC,EAAOD,IAEHC,EAAS,SAACD,GACdE,OAAOC,SAAS,CACdC,IAAK,IAEPC,MAAM,GAAD,OAdD,+DAcC,iDAEDnB,EAAMY,KAFL,mBAGoB,IAAXE,EAAM,IAClB,CACEM,OAAQ,QAGTC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACC,GACLjB,EAAWmB,KAAKC,KAAKH,EAAIR,IAAM,KAC/BX,EAASmB,EAAII,UAGnB,OACE,eAAC,IAAMC,SAAP,WACGzB,GACC,cAAC,IAAD,CACE0B,MAAOxB,EACPyB,MAAM,UACNC,SAAU,SAACC,EAAGzB,GAAJ,OAAaO,EAAUP,IACjCA,KAAMA,EACN0B,UAAU,kBAGd,oBAAIA,UAAU,YAAd,SACG9B,GACCA,EAAM+B,KAAI,SAACC,GAAD,OACR,oBAAkBF,UAAWE,EAAKtB,KAAlC,SACE,oBAAGuB,KAAMD,EAAKC,KAAMC,OAAO,SAASC,IAAI,aAAxC,UACE,qBAAKL,UAAU,MAAf,SACE,qBAAKM,IAAKJ,EAAKK,IAAKC,IAAI,GAAGC,QAAQ,WAErC,mBAAGT,UAAU,OAAb,SAAqBE,EAAKtB,OAC1B,mBAAGoB,UAAU,MAAb,SAAoBE,EAAKQ,QACzB,mBAAGV,UAAU,OAAb,SAAqBE,EAAKS,OAC1B,mBAAGX,UAAU,QAAb,SAAsBE,EAAKU,QAC3B,oBAAGZ,UAAU,OAAb,UACE,sDACA,+BAAOE,EAAKW,KAAKC,OAAO,EAAG,IAAIC,WAAW,IAAK,cAX5Cb,EAAKc,SAiBnB9C,GACC,cAAC,IAAD,CACE0B,MAAOxB,EACPyB,MAAM,UACNC,SAAU,SAACC,EAAGzB,GAAJ,OAAaO,EAAUP,IACjCA,KAAMA,EACN0B,UAAU,yB,MCtELiB,MAzBf,WACE,MAAwBhD,mBAAiB,IAAzC,mBAAOW,EAAP,KAAasC,EAAb,KACMC,EAAW,SAACC,GACZxC,IAASwC,GACbF,EAAQE,IAEV,OACE,sBAAKpB,UAAU,MAAf,UACE,oDACA,0BAASA,UAAU,WAAnB,UAIE,wBAAQqB,QAAS,kBAAMF,EAAS,WAAWnB,UAAU,SAArD,sCAGA,wBAAQqB,QAAS,kBAAMF,EAAS,eAAenB,UAAU,aAAzD,iEAIF,cAAC,EAAD,CAAOpB,KAAMA,QCVJ0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.43ddf599.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MuiPagination from '@material-ui/lab/Pagination'\nimport '../assets/scss/Lists.scss'\ntype typeProps = {\n  name: string\n}\ntype data = {\n  id: number\n  name: string\n  title: string\n  img: string\n  href: string\n  price: string\n  date: string\n  kcal: string\n  caution: string\n  release_date: string\n}\ntype response = {\n  num: number\n  data: data[]\n}\n\nconst Lists = (props: typeProps) => {\n  const [lists, setLists] = useState<data[]>()\n  const [allPage, setAllPage] = useState(1)\n  const [page, setPage] = useState(1)\n  console.log(process.env.NODE_ENV)\n  const domain: string =\n    //@ts-ignore\n    process.env.NODE_ENV === 'local'\n      ? 'http://localhost:3000'\n      : 'https://3ld1dn462c.execute-api.ap-northeast-1.amazonaws.com/'\n  useEffect((): void => {\n    if (!props.name) return\n    pageEvent(1)\n    // eslint-disable-next-line\n  }, [props.name])\n  const pageEvent = (num: number): void => {\n    setPage(num)\n    update(num)\n  }\n  const update = (num: number): void => {\n    window.scrollTo({\n      top: 0,\n    })\n    fetch(\n      `${domain}/default/new-goods-get-prod-func?name=${\n        props.name\n      }&offset=${(num - 1) * 50}`,\n      {\n        method: 'GET',\n      }\n    )\n      .then((res) => {\n        return res.json()\n      })\n      .then((res: response) => {\n        setAllPage(Math.ceil(res.num / 50))\n        setLists(res.data)\n      })\n  }\n  return (\n    <React.Fragment>\n      {lists && (\n        <MuiPagination\n          count={allPage}\n          color=\"primary\"\n          onChange={(e, page) => pageEvent(page)}\n          page={page}\n          className=\"topPagenation\"\n        />\n      )}\n      <ul className=\"food-list\">\n        {lists &&\n          lists.map((list: data) => (\n            <li key={list.id} className={list.name}>\n              <a href={list.href} target=\"_blank\" rel=\"noreferrer\">\n                <div className=\"img\">\n                  <img src={list.img} alt=\"\" loading=\"lazy\" />\n                </div>\n                <p className=\"name\">{list.name}</p>\n                <p className=\"ttl\">{list.title}</p>\n                <p className=\"kcal\">{list.kcal}</p>\n                <p className=\"price\">{list.price}</p>\n                <p className=\"date\">\n                  <span>更新日</span>\n                  <span>{list.date.substr(0, 10).replaceAll('-', '/')}</span>\n                </p>\n              </a>\n            </li>\n          ))}\n      </ul>\n      {lists && (\n        <MuiPagination\n          count={allPage}\n          color=\"primary\"\n          onChange={(e, page) => pageEvent(page)}\n          page={page}\n          className=\"bottomPagenation\"\n        />\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default Lists\n","import React, { useState } from 'react'\nimport Lists from './components/Lists'\nimport './assets/scss/App.scss'\n\nfunction App() {\n  const [name, setName] = useState<string>('')\n  const itemShow = (storeName: string) => {\n    if (name === storeName) return\n    setName(storeName)\n  }\n  return (\n    <div className=\"app\">\n      <h1>新商品</h1>\n      <section className=\"btn-area\">\n        {/* <button onClick={() => itemShow('7-Eleven')} className=\"7-Eleven\">\n          セブンイレブン\n        </button> */}\n        <button onClick={() => itemShow('LAWSON')} className=\"lawson\">\n          ローソン\n        </button>\n        <button onClick={() => itemShow('FamilyMart')} className=\"familymart\">\n          ファミリーマート\n        </button>\n      </section>\n      <Lists name={name} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/css/reset.css'\nimport './assets/scss/index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}